class EventEmitter {
    constructor() {
        this.events = {};
    }

    on(event, listener) {
        if (!this.events[event]) {
            this.events[event] = [];
        }
        this.events[event].push(listener);
    }

    emit(event, ...args) {
        if (this.events[event]) {
            this.events[event].forEach(listener => listener.apply(this, args));
        }
    }
}


class tepianPiece extends EventEmitter {

    constructor(konfigurasi) {
        super();
        this.element = [];
        this.konfigurasi = konfigurasi;
        this.index_soal = 0;

        this.jawabanUser = [];
        this.init();
    }

    init() {
        this.axiosInit();
        this.getData();
    }

    axiosInit() {
        this.apiClient = axios.create({
            baseURL: "http://127.0.0.1:8000/api/embed/quiz",
            timeout: 30000,
            headers: {
                'X-Api-Key': this.konfigurasi.Key,
            }
        })
    }

    getData() {
        this.apiClient.get("/get/" + this.konfigurasi.quiz)
            .then(Response => {
                const data = Response.data;
                this.soal_data = data;
                const soal = data.soal
                this.soal_len = soal.length;
                this.emit("ready", soal);
            })
            .catch(error => {
                console.error("error", error);
            })
    }

    make(element, number) {
        if (number > this.soal_len && number < 1) {

        } else if (this.soal_len == 0) {

        }
        else {

        }
        const question = {
            element: element,
            soal: this.initSoal(element, number)
        }
        this.element.push(question);

        return question;

    }

    initSoal(element, number) {
        console.log(this.soal_data.soal[number].jenis_soal);
        switch (this.soal_data.soal[number].jenis_soal) {
            case "pilihanGanda":
                return new pilihanGanda(element, this.soal_data.soal[number]);
                break;
            case "isianSingkat":

                break;
            default:
                break;
        }

    }

    question(no) {

    }

    noContent() {

    }

    render() {

    }


}



class pilihanGanda {
    constructor(element, soal) {
        this.element = element;
        this.soal = soal;
        console.log(soal);
    }

    container() {
        const container = document.querySelector(this.element);
        const card = document.createElement("div");
        card.classList.add("card");

        const cardBody = document.createElement("div");
        cardBody.classList.add("card-body");


        const cardFooter = document.createElement("div");

        cardFooter.classList.add("card-footer");

        const soal = document.createElement("div")

        card.appendChild(cardBody);
        card.appendChild(cardFooter);

    }

    soal() {

    }

    pilihan() {

    }

    checkJawaban() {

    }
}

class isianSingkat {
    constructor() {

    }
}

